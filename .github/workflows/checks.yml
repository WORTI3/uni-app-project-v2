name: Branch checks, coverage and deployments

on: [push]

jobs:
  install_and_test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      
      - name: Install dependencies
        run: |
          npm ci

      - name: Run lints
        run: npm run lint

      - name: Run tests
        run: npm run test

  coverage:
    # Only continue if all tests passed.
    needs: [install_and_test]

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Coverage
        uses: ArtiomTr/jest-coverage-report-action@v2.2.6

  deploy-test:
    # Only deploy if all tests passed.
    needs: [install_and_test, coverage]

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps: 
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          npm ci
      
      - name: Install Railway
        run: npm i -g @railway/cli

      # - name: Create PR environment on Railway
      #   if: github.event.action == 'opened'
      #   uses: Faolain/railway-pr-deploy@v2.0.4
      #   with:
      #     RAILWAY_API_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
      #     PROJECT_ID: ${{ secrets.RAILWAY_PROJECT_ID }}
      #     SRC_ENVIRONMENT_NAME: staging
      #     DEST_ENV_NAME: pr-${{ github.event.pull_request.number }}
      #     PROVIDER: node
      #     branch_name: ${{ github.head_ref }}
  
  deploy:
    runs-on: ubuntu-latest
    needs: [install_and_test, coverage, deploy-test]
    if: success() && github.ref == 'refs/heads/master'
    steps:
      - name: Deploy
        run: railway up --service ${{ secrets.RAILWAY_SERVICE_NAME }}
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
